{"version":3,"sources":["components/appHeader/AppHeader.js","services/MarvelService.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_offsetBase","_total","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","total","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","src","img","objectFit","alt","View","RandomChar","useState","setChar","loading","setLoading","error","setError","marvelService","useEffect","updateChar","onCharLoaded","onError","Math","floor","random","then","catch","spinner","errorMessage","content","onClick","mjolnir","CharList","props","chars","setChars","newCharactersLoading","setNewCharactersLoading","setOffset","charsEnded","setCharsEnded","refItems","useRef","onRequest","onLoadingCharacters","onLoadedCharacters","newChars","ended","focusChar","i","current","focus","item","tabIndex","ref","onCharSelected","onKeyPress","e","key","renderItems","disabled","Skeleton","length","CharInfo","charId","onCharLoading","skeleton","ErrorBoundary","state","this","setState","children","Component","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAqBeA,EAnBG,WACf,OACG,yBAAQC,UAAU,cAAlB,UACG,oBAAIA,UAAU,aAAd,SACM,oBAAGC,KAAK,0BAAR,UACG,0CADH,2BAIN,qBAAKD,UAAU,YAAf,SACM,+BACG,6BAAI,mBAAGC,KAAK,0BAAR,0BADP,IAGG,6BAAI,mBAAGA,KAAK,0BAAR,+B,8BCyBPC,E,iDAtCZC,SAAW,4C,KACXC,QAAU,0C,KACVC,YAAc,I,KACdC,OAAS,E,KAETC,Y,uCAAc,WAAOC,GAAP,eAAAC,EAAA,sEACOC,MAAMF,GADb,WACLG,EADK,QAGFC,GAHE,sBAIF,IAAIC,MAAJ,0BAA6BL,EAA7B,qBAA6CG,EAAIG,SAJ/C,uBAMEH,EAAII,OANN,mF,2DASdC,iB,sBAAmB,0CAAAP,EAAA,6DAAOQ,EAAP,+BAAgB,EAAKZ,YAArB,SACE,EAAKE,YAAL,UAAoB,EAAKJ,SAAzB,qCAA8Dc,EAA9D,YAAwE,EAAKb,UAD/E,cACVO,EADU,OAEhB,EAAKL,OAASK,EAAIO,KAAKC,MAFP,kBAGTR,EAAIO,KAAKE,QAAQC,IAAI,EAAKC,sBAHjB,2C,KAMnBC,a,uCAAe,WAAOC,GAAP,eAAAf,EAAA,sEACM,EAAKF,YAAL,UAAoB,EAAKJ,SAAzB,sBAA+CqB,EAA/C,YAAqD,EAAKpB,UADhE,cACNO,EADM,yBAEL,EAAKW,oBAAoBX,EAAIO,KAAKE,QAAQ,KAFrC,2C,2DAKfE,oBAAsB,SAACG,GACpB,MAAO,CACJC,KAAMD,EAAKC,KACXF,GAAIC,EAAKD,GACTG,YAAaF,EAAKE,YAAL,UAAsBF,EAAKE,YAAYC,MAAM,EAAG,KAAhD,OAA4D,gEACzEC,UAAWJ,EAAKI,UAAUC,KAAO,IAAML,EAAKI,UAAUE,UACtDC,SAAUP,EAAKQ,KAAK,GAAGzB,IACvB0B,KAAMT,EAAKQ,KAAK,GAAGzB,IACnB2B,OAAQV,EAAKU,OAAOC,SC8BdC,EAhEC,WACb,OACG,sBAAKC,MAAM,6BAA6BC,MAAO,CAACC,OAAQ,SAAUC,WAAY,OAAQC,QAAS,SAAUC,MAAM,QAAQC,OAAO,QAAQC,QAAQ,cAAcC,oBAAoB,WAAhL,UACG,mBAAGC,UAAU,mBAAb,SACA,mBAAGA,UAAU,YAAb,SACA,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,IAAvD,UACA,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAClI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,mBAGrG,mBAAGR,UAAU,iDAAb,SACJ,mBAAGA,UAAU,aAAb,SACA,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAvD,UACA,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,SAASC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eACjI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,kBAGrG,mBAAGR,UAAU,mBAAb,SACJ,mBAAGA,UAAU,aAAb,SACA,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,OAAvD,UACA,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAClI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,mBAGrG,mBAAGR,UAAU,kDAAb,SACJ,mBAAGA,UAAU,cAAb,SACA,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAvD,UACA,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,QAAQC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAChI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,iBAGrG,mBAAGR,UAAU,kCAAb,SACJ,mBAAGA,UAAU,cAAb,SACA,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,MAAvD,UACA,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAClI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,mBAGrG,mBAAGR,UAAU,kDAAb,SACJ,mBAAGA,UAAU,cAAb,SACA,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAvD,UACA,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,SAASC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eACjI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,kBAGrG,mBAAGR,UAAU,kCAAb,SACJ,mBAAGA,UAAU,cAAb,SACA,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,OAAvD,UACA,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAClI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,mBAGrG,mBAAGR,UAAU,iDAAb,SACJ,mBAAGA,UAAU,cAAb,SACA,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAvD,UACA,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,KAAKC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAC7H,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,kBCxDnG,MAA0B,kCCQ1BK,EANM,WAClB,OACG,qBAAKC,IAAKC,EAAKvB,MAAO,CAAEG,QAAS,QAASC,MAAO,QAASC,OAAQ,QAAQmB,UAAW,UAAWvB,OAAQ,UAAWwB,IAAI,WCJ9G,G,MAAA,IAA0B,qCCoEnCC,EAAO,SAAC,GAAY,IAAXxC,EAAU,EAAVA,KACLC,EAAgDD,EAAhDC,KAAMC,EAA0CF,EAA1CE,YAAaE,EAA6BJ,EAA7BI,UAAWG,EAAkBP,EAAlBO,SAAUE,EAAQT,EAARS,KAE3C6B,EAAY,CAACA,UAAW,SAM5B,MAJkB,wEAAdlC,IACDkC,EAAY,CAACA,UAAW,YAIxB,sBAAK/D,UAAU,oBAAf,UACG,qBAAK6D,IAAKhC,EAAWU,MAAOwB,EAAWC,IAAI,mBAAmBhE,UAAU,oBACxE,sBAAKA,UAAU,mBAAf,UACG,mBAAGA,UAAU,mBAAb,SAAiC0B,IACjC,mBAAG1B,UAAU,oBAAb,SACI2B,IAEJ,sBAAK3B,UAAU,mBAAf,UACG,mBAAGC,KAAM+B,EAAUhC,UAAU,sBAA7B,SACM,qBAAKA,UAAU,QAAf,wBAEN,mBAAGC,KAAMiC,EAAMlC,UAAU,2BAAzB,SACM,qBAAKA,UAAU,QAAf,8BAQNkE,EA1FI,WAChB,MAAwBC,mBAAS,IAAjC,mBAAO1C,EAAP,KAAa2C,EAAb,KACA,EAA8BD,oBAAS,GAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAA0BH,oBAAS,GAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAEMC,EAAgB,IAAIvE,EAE1BwE,qBAAU,WACPC,MACA,IAEH,IAAMC,EAAe,SAACnD,GACnB2C,EAAQ3C,GACR6C,GAAW,GACXE,GAAS,IAONK,EAAU,WACbP,GAAW,GACXE,GAAS,IAGNG,EAAa,WAChB,IAAMnD,EAAKsD,KAAKC,MAAM,IAAAD,KAAKE,SAAiC,QAT5DV,GAAW,GAWXG,EAAclD,aAAaC,GACvByD,KAAKL,GACLM,MAAML,IAGPM,EAAUd,EAAU,cAAC,EAAD,IAAa,KACjCe,EAAeb,EAAQ,cAAC,EAAD,IAAkB,KACzCc,EAAYF,GAAWC,EAAsC,KAAtB,cAAC,EAAD,CAAM3D,KAAMA,IACzD,OACG,0BAASzB,UAAU,aAAnB,UACImF,EACAC,EACAC,EACD,sBAAKrF,UAAU,qBAAf,UACG,oBAAGA,UAAU,oBAAb,wCAC8B,uBAD9B,4CAIA,mBAAGA,UAAU,oBAAb,mCAGA,wBAAQA,UAAU,sBACTsF,QAASX,EADlB,SAEG,qBAAK3E,UAAU,QAAf,sBAEH,qBAAK6D,IAAK0B,EAASvB,IAAI,UAAUhE,UAAU,kC,OCiExCwF,G,MAvHE,SAACC,GAEf,MAA0BtB,mBAAS,IAAnC,mBAAOuB,EAAP,KAAcC,EAAd,KACA,EAA0BxB,oBAAS,GAAnC,mBAAOI,EAAP,KAAcC,EAAd,KACA,EAA8BL,oBAAS,GAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAAwDH,oBAAS,GAAjE,mBAAOyB,EAAP,KAA6BC,EAA7B,KACA,EAA4B1B,mBAAS,KAArC,mBAAOlD,EAAP,KAAe6E,EAAf,KACA,EAAoC3B,oBAAS,GAA7C,mBAAO4B,EAAP,KAAmBC,EAAnB,KAEMC,EAAWC,iBAAO,IAElBzB,EAAgB,IAAIvE,EAE1BwE,qBAAU,WACPyB,MAEA,IAQH,IAAMA,EAAY,SAAClF,GAChBmF,IACA3B,EAAczD,iBAAiBC,GAC3BgE,KAAKoB,GACLnB,MAAML,IAGPA,EAAU,WACbL,GAAS,GACTF,GAAW,IAGR8B,EAAsB,WACzBP,GAAwB,IAGrBQ,EAAqB,SAAAC,GACxB,IAAIC,EAAQ9B,EAAcnE,OAASW,GAAU,EAE7C0E,GAAS,SAAAD,GAAK,4BAAQA,GAAR,YAAkBY,OAChChC,GAAW,GACXE,GAAS,GACTqB,GAAwB,GACxBC,GAAU,SAAA7E,GAAM,OAAIA,EAAS,KAC7B+E,EAAcO,IAGXC,EAAY,SAACC,GAChBR,EAASS,QAAQD,GAAGE,SAyCjBvE,EAtCc,SAACsD,GAClB,IAAMtD,EAAQsD,EAAMrE,KAAI,SAACuF,EAAMH,GAC5B,IAAO5E,EAAuB+E,EAAvB/E,UAAWH,EAAYkF,EAAZlF,KAAMF,EAAMoF,EAANpF,GAEpBuC,EAAY,CAACA,UAAW,SAM5B,MAJkB,wEAAdlC,IACDkC,EAAY,CAACA,UAAW,YAIxB,qBAAI/D,UAAU,aACX6G,SAAU,EACVC,IAAK,SAAArF,GAAI,OAAIwE,EAASS,QAAQD,GAAKhF,GAEnC6D,QAAS,WACNG,EAAMsB,eAAevF,GACrBgF,EAAUC,IAEbO,WAAY,SAACC,GACI,UAAVA,EAAEC,MACHzB,EAAMsB,eAAevF,GACrBgF,EAAUC,KAXnB,UAcG,qBAAKlE,MAAOwB,EAAWF,IAAKhC,EAAWmC,IAAI,UAC3C,qBAAKhE,UAAU,aAAf,SAA6B0B,MAZxBF,MAiBd,OACG,oBAAIxB,UAAU,aAAd,SACIoC,IAKI+E,CAAYzB,GAEpBN,EAAeb,EAAQ,cAAC,EAAD,IAAkB,KACzCY,EAAUd,EAAU,cAAC,EAAD,IAAa,KACjCgB,EAAYF,GAAWC,EAAwB,KAARhD,EAE7C,OACG,sBAAKpC,UAAU,aAAf,UACIoF,EACAD,EACAE,EACD,wBACGrF,UAAU,mCACVoH,SAAUxB,EACVN,QAAS,kBAAMa,EAAUlF,IACzBsB,MAAO,CAAC,QAAWwD,EAAa,OAAS,SAJ5C,SAKG,qBAAK/F,UAAU,QAAf,8BClGGqH,G,MAjBE,WACd,OACG,qCACG,mBAAGrH,UAAU,eAAb,0DACA,sBAAKA,UAAU,WAAf,UACG,sBAAKA,UAAU,yBAAf,UACG,qBAAKA,UAAU,2BACf,qBAAKA,UAAU,4BAElB,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,kCCkDrBiE,G,MAAO,SAAC,GAAY,IAAXxC,EAAU,EAAVA,KACLC,EAAwDD,EAAxDC,KAAMC,EAAkDF,EAAlDE,YAAaE,EAAqCJ,EAArCI,UAAWG,EAA0BP,EAA1BO,SAAUE,EAAgBT,EAAhBS,KAAMC,EAAUV,EAAVU,OACjD4B,EAAY,CAACA,UAAW,SAK5B,MAJkB,wEAAdlC,IACDkC,EAAY,CAACA,UAAW,YAIxB,qCACG,sBAAK/D,UAAU,eAAf,UACG,qBAAK6D,IAAKhC,EAAWU,MAAOwB,EAAWC,IAAI,UAC3C,gCACG,qBAAKhE,UAAU,kBAAf,SAAkC0B,IAClC,sBAAK1B,UAAU,aAAf,UACG,mBAAGC,KAAM+B,EAAUhC,UAAU,sBAA7B,SACG,qBAAKA,UAAU,QAAf,wBAEH,mBAAGC,KAAMiC,EAAMlC,UAAU,2BAAzB,SACG,qBAAKA,UAAU,QAAf,6BAKZ,qBAAKA,UAAU,cAAf,SACI2B,IAEJ,qBAAK3B,UAAU,eAAf,qBACA,qBAAIA,UAAU,oBAAd,UACImC,EAAOmF,OAAS,EAAI,KAAO,gDAEzBnF,EAAOd,KAAI,SAACuF,EAAMH,GACf,KAAOA,EAAI,IACR,OACG,oBAAYzG,UAAU,oBAAtB,SACI4G,EAAKlF,MADA+E,cAgBlBc,EAtGE,SAAC9B,GACf,MAAwBtB,mBAAS,MAAjC,mBAAO1C,EAAP,KAAa2C,EAAb,KACA,EAA8BD,oBAAS,GAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAA0BH,oBAAS,GAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAEMC,EAAgB,IAAIvE,EAE1BwE,qBAAU,WACPC,MACA,CAACc,EAAM+B,SAEV,IAAM7C,EAAa,WAChB,IAAO6C,EAAU/B,EAAV+B,OAEFA,IAILC,IACAhD,EAAclD,aAAaiG,GACvBvC,KAAKL,GACLM,MAAML,KAGPD,EAAe,SAACnD,GACnB2C,EAAQ3C,GACR6C,GAAW,GACXE,GAAS,IAGNiD,EAAgB,WACnBnD,GAAW,IAGRO,EAAU,WACbP,GAAW,GACXE,GAAS,IAGNkD,EAAWjG,GAAQ4C,GAAWE,EAAQ,KAAO,cAAC,EAAD,IAC7CY,EAAUd,EAAU,cAAC,EAAD,IAAa,KACjCe,EAAeb,EAAQ,cAAC,EAAD,IAAkB,KACzCc,EAAYF,GAAWC,IAAiB3D,EAA8B,KAAtB,cAAC,EAAD,CAAMA,KAAMA,IAClE,OACG,sBAAKzB,UAAU,aAAf,UACI0H,EACAvC,EACAC,EACAC,M,wBChCKsC,E,4MArBZC,MAAQ,CACLrD,OAAO,G,uDAOV,WACGsD,KAAKC,SAAS,CACXvD,OAAO,M,oBAIb,WACG,OACGsD,KAAKD,MAAMrD,MAAQ,cAAC,EAAD,IAAkBsD,KAAKpC,MAAMsC,a,GAlB7BC,aCHb,MAA0B,mCCsC1BC,EA7BH,WAET,MAAgC9D,mBAAS,MAAzC,mBAAO+D,EAAP,KAAqB9D,EAArB,KAMA,OACG,sBAAKpE,UAAU,MAAf,UACG,cAAC,EAAD,IACA,uBAAMA,UAAU,UAAhB,UACG,cAAC,EAAD,UACG,cAAC,EAAD,MAEH,sBAAKA,UAAU,gBAAf,UACG,cAAC,EAAD,UACG,cAAC,EAAD,CAAU+G,eAbF,SAACvF,GACrB4C,EAAQ5C,QAcC,cAAC,EAAD,UACG,cAAC,EAAD,CAAUgG,OAAQU,SAGxB,qBAAKlI,UAAU,gBAAgB6D,IAAKsE,EAAYnE,IAAI,kB,MC3BhEoE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9bf0aa37.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n   return (\n      <header className=\"app__header\">\n         <h1 className=\"app__title\">\n               <a href=\"https://www.google.com/\">\n                  <span>Marvel</span> information portal\n               </a>\n         </h1>\n         <nav className=\"app__menu\">\n               <ul>\n                  <li><a href=\"https://www.google.com/\">Characters</a></li>\n                  /\n                  <li><a href=\"https://www.google.com/\">Comics</a></li>\n               </ul>\n         </nav>\n      </header>\n   )\n}\n\nexport default AppHeader;","class MarvelService {\n   _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n   _apiKey = 'apikey=7b278298a152832e44b30fbabfc1fdbd';\n   _offsetBase = 210;\n   _total = 0;\n\n   getResource = async (url) => {\n      const res = await fetch(url);\n\n      if (!res.ok) {\n         throw new Error(`Could not fetch ${url}, status: ${res.status}`);\n      }\n      return await res.json();\n   }\n\n   getAllCharacters = async (offset = this._offsetBase) => {\n      const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\n      this._total = res.data.total;\n      return res.data.results.map(this._transformCharacter);\n   }\n\n   getCharacter = async (id) => {\n      const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\n      return this._transformCharacter(res.data.results[0]);\n   }\n\n   _transformCharacter = (char) => {\n      return {\n         name: char.name,\n         id: char.id,\n         description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character. Read on the wiki.',\n         thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n         homepage: char.urls[0].url,\n         wiki: char.urls[1].url,\n         comics: char.comics.items,\n      }\n   }\n}\n\nexport default MarvelService;","const Spinner = () => {\n   return (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n         <g transform=\"translate(80,50)\">\n         <g transform=\"rotate(0)\">\n         <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#E81111\" fillOpacity=\"1\">\n         <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n         <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n         </circle>\n         </g>\n         </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n         <g transform=\"rotate(45)\">\n         <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#E81111\" fillOpacity=\"0.875\">\n         <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n         <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n         </circle>\n         </g>\n         </g><g transform=\"translate(50,80)\">\n         <g transform=\"rotate(90)\">\n         <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#E81111\" fillOpacity=\"0.75\">\n         <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n         <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n         </circle>\n         </g>\n         </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n         <g transform=\"rotate(135)\">\n         <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#E81111\" fillOpacity=\"0.625\">\n         <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n         <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n         </circle>\n         </g>\n         </g><g transform=\"translate(20,50.00000000000001)\">\n         <g transform=\"rotate(180)\">\n         <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#E81111\" fillOpacity=\"0.5\">\n         <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n         <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n         </circle>\n         </g>\n         </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n         <g transform=\"rotate(225)\">\n         <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#E81111\" fillOpacity=\"0.375\">\n         <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n         <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n         </circle>\n         </g>\n         </g><g transform=\"translate(49.99999999999999,20)\">\n         <g transform=\"rotate(270)\">\n         <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#E81111\" fillOpacity=\"0.25\">\n         <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n         <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n         </circle>\n         </g>\n         </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n         <g transform=\"rotate(315)\">\n         <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#E81111\" fillOpacity=\"0.125\">\n         <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n         <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n         </circle>\n         </g>\n         </g>\n      </svg>\n   )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\n\nconst ErrorMessage = () => {\n   return (\n      <img src={img} style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}} alt='Error'/>\n   )\n}\n\nexport default ErrorMessage;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import {useState, useEffect} from 'react';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n   const [char, setChar] = useState({});\n   const [loading, setLoading] = useState(true);\n   const [error, setError] = useState(false);\n\n   const marvelService = new MarvelService();\n\n   useEffect(() => {\n      updateChar();\n   }, [])\n\n   const onCharLoaded = (char) => {\n      setChar(char);\n      setLoading(false);\n      setError(false);\n   }\n\n   const onCharLoading = () => {\n      setLoading(true);\n   }\n\n   const onError = () => {\n      setLoading(false);\n      setError(true);\n   }\n\n   const updateChar = () => {\n      const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n      onCharLoading();\n      marvelService.getCharacter(id)\n         .then(onCharLoaded)\n         .catch(onError);\n   }\n\n   const spinner = loading ? <Spinner/> : null;\n   const errorMessage = error ? <ErrorMessage/> : null;\n   const content = !(spinner || errorMessage) ? <View char={char}/> : null;\n   return (\n      <section className=\"randomchar\">\n         {spinner}\n         {errorMessage}\n         {content}\n         <div className=\"randomchar__static\">\n            <p className=\"randomchar__title\">\n               Random character for today!<br/>\n               Do you want to get to know him better?\n            </p>\n            <p className=\"randomchar__title\">\n               Or choose another one\n            </p>\n            <button className=\"button button__main\"\n                     onClick={updateChar}>\n               <div className=\"inner\">try it</div>\n            </button>\n            <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n         </div>\n      </section>\n   )\n}\n\nconst View = ({char}) => {\n   const {name, description, thumbnail, homepage, wiki} = char;\n\n   let objectFit = {objectFit: 'cover'};\n\n   if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n      objectFit = {objectFit: 'contain'};\n   }\n\n   return (\n      <div className=\"randomchar__block\">\n         <img src={thumbnail} style={objectFit} alt=\"Random character\" className='randomchar__img'/>\n         <div className=\"randomchar__info\">\n            <p className=\"randomchar__name\">{name}</p>\n            <p className=\"randomchar__descr\">\n               {description}\n            </p>\n            <div className=\"randomchar__btns\">\n               <a href={homepage} className=\"button button__main\">\n                     <div className=\"inner\">homepage</div>\n               </a>\n               <a href={wiki} className=\"button button__secondary\">\n                     <div className=\"inner\">Wiki</div>\n               </a>\n            </div>\n         </div>\n      </div>\n   )\n}\n\nexport default RandomChar;","import './charList.scss';\nimport {useState, useEffect, useRef} from 'react';\nimport PropTypes from 'prop-types';\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nconst CharList = (props) => {\n\n   const [chars, setChars] = useState([]);\n   const [error, setError] = useState(false);\n   const [loading, setLoading] = useState(true);\n   const [newCharactersLoading, setNewCharactersLoading] = useState(false);\n   const [offset, setOffset] = useState(210);\n   const [charsEnded, setCharsEnded] = useState(false);\n\n   const refItems = useRef([]);\n\n   const marvelService = new MarvelService();\n\n   useEffect(() => {\n      onRequest();\n      // window.addEventListener('scroll', loadingCharsByScroll);\n   }, [])\n \n   // const loadingCharsByScroll = () => {\n   //    if ((window.scrollY + document.documentElement.clientHeight >= document.documentElement.scrollHeight) && (document.documentElement.scrollHeight >= 1614)) {\n   //       onRequest(offset);\n   //    }\n   // }\n\n   const onRequest = (offset) => {\n      onLoadingCharacters();\n      marvelService.getAllCharacters(offset)\n         .then(onLoadedCharacters)\n         .catch(onError);\n   }\n\n   const onError = () => {\n      setError(true);\n      setLoading(false);\n   }\n\n   const onLoadingCharacters = () => {\n      setNewCharactersLoading(true);\n   }\n\n   const onLoadedCharacters = newChars => {\n      let ended = marvelService._total - offset <= 9;\n\n      setChars(chars => [...chars, ...newChars]);\n      setLoading(false);\n      setError(false);\n      setNewCharactersLoading(false);\n      setOffset(offset => offset + 9);\n      setCharsEnded(ended);\n   }\n\n   const focusChar = (i) => {\n      refItems.current[i].focus();\n   }\n\n   const renderItems = (chars) => {\n      const items = chars.map((item, i) => {\n         const {thumbnail, name, id} = item;\n\n         let objectFit = {objectFit: 'cover'};\n\n         if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n            objectFit = {objectFit: 'contain'};\n         }\n         \n         return (\n            <li className='char__item'\n               tabIndex={0}\n               ref={char => refItems.current[i] = char}\n               key={id}\n               onClick={() => {\n                  props.onCharSelected(id);\n                  focusChar(i);\n               }}\n               onKeyPress={(e) => {\n                  if (e.key === 'Enter') {\n                     props.onCharSelected(id);\n                     focusChar(i);\n                  }\n               }}>\n               <img style={objectFit} src={thumbnail} alt=\"abyss\"/>\n               <div className=\"char__name\">{name}</div>\n            </li>\n         )\n      })\n      \n      return (\n         <ul className=\"char__grid\">\n            {items}\n         </ul>\n      );\n   }\n\n   const items = renderItems(chars);\n\n   const errorMessage = error ? <ErrorMessage/> : null;\n   const spinner = loading ? <Spinner/> : null;\n   const content = !(spinner || errorMessage) ? items : null;\n\n   return (\n      <div className=\"char__list\">\n         {errorMessage}\n         {spinner}\n         {content}\n         <button\n            className=\"button button__main button__long\"\n            disabled={newCharactersLoading}\n            onClick={() => onRequest(offset)}\n            style={{'display': charsEnded ? 'none' : 'block'}}>\n            <div className=\"inner\">load more</div>\n         </button>\n      </div>\n   )\n}\n\nCharList.propTypes = {\n   onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n   return (\n      <>\n         <p className=\"char__select\">Please select a character to see information</p>\n         <div className=\"skeleton\">\n            <div className=\"pulse skeleton__header\">\n               <div className=\"pulse skeleton__circle\"></div>\n               <div className=\"pulse skeleton__mini\"></div>\n            </div>\n            <div className=\"pulse skeleton__block\"></div>\n            <div className=\"pulse skeleton__block\"></div>\n            <div className=\"pulse skeleton__block\"></div>\n         </div>\n      </>\n   )\n}\n\nexport default Skeleton;","import {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\nimport MarvelService from '../../services/MarvelService';\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n   const [char, setChar] = useState(null);\n   const [loading, setLoading] = useState(false);\n   const [error, setError] = useState(false);\n\n   const marvelService = new MarvelService();\n\n   useEffect(() => {\n      updateChar();\n   }, [props.charId])\n\n   const updateChar = () => {\n      const {charId} = props;\n\n      if (!charId) {\n         return;\n      }\n\n      onCharLoading();\n      marvelService.getCharacter(charId)\n         .then(onCharLoaded)\n         .catch(onError);\n   }\n\n   const onCharLoaded = (char) => {\n      setChar(char);\n      setLoading(false);\n      setError(false);\n   }\n\n   const onCharLoading = () => {\n      setLoading(true);\n   }\n\n   const onError = () => {\n      setLoading(false);\n      setError(true);\n   }\n\n   const skeleton = char || loading || error ? null : <Skeleton/>;\n   const spinner = loading ? <Spinner/> : null;\n   const errorMessage = error ? <ErrorMessage/> : null;\n   const content = !(spinner || errorMessage || !char) ? <View char={char}/> : null;\n   return (\n      <div className=\"char__info\">\n         {skeleton}\n         {spinner}\n         {errorMessage}\n         {content}\n      </div>\n   )\n}\n\nconst View = ({char}) => {\n   const {name, description, thumbnail, homepage, wiki, comics} = char;\n   let objectFit = {objectFit: 'cover'};\n   if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n      objectFit = {objectFit: 'contain'};\n   }\n\n   return (\n      <>\n         <div className=\"char__basics\">\n            <img src={thumbnail} style={objectFit} alt=\"abyss\"/>\n            <div>\n               <div className=\"char__info-name\">{name}</div>\n               <div className=\"char__btns\">\n                  <a href={homepage} className=\"button button__main\">\n                     <div className=\"inner\">homepage</div>\n                  </a>\n                  <a href={wiki} className=\"button button__secondary\">\n                     <div className=\"inner\">Wiki</div>\n                  </a>\n               </div>\n            </div>\n         </div>\n         <div className=\"char__descr\">\n            {description}\n         </div>\n         <div className=\"char__comics\">Comics:</div>\n         <ul className=\"char__comics-list\">\n            {comics.length > 0 ? null : 'There are no comics featuring this character.'}\n            {\n               comics.map((item, i) => {\n                  while (i < 10) {\n                     return (\n                        <li key={i} className=\"char__comics-item\">\n                           {item.name}\n                        </li>\n                     )\n                  }\n               })\n            }\n         </ul>\n      </>\n   )\n}\n\nCharInfo.propTypes = {\n   charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nclass ErrorBoundary extends Component {\n\n   state = {\n      error: false,\n   }\n\n   // static getDerivedStateFromError(error) {\n   //    return {error: true};\n   // }\n\n   componentDidCatch() {\n      this.setState({\n         error: true,\n      })\n   }\n\n   render() {\n      return (\n         this.state.error ? <ErrorMessage/> : this.props.children\n      )\n   }\n}\n\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import {useState} from 'react';\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nconst App = () => {\n\n   const [selectedChar, setChar] = useState(null);\n   \n   const onCharSelected = (id) => {\n      setChar(id);\n   }\n\n   return (\n      <div className=\"app\">\n         <AppHeader/>\n         <main className=\"content\">\n            <ErrorBoundary>\n               <RandomChar/>\n            </ErrorBoundary>\n            <div className=\"char__content\">\n               <ErrorBoundary>\n                  <CharList onCharSelected={onCharSelected}/>\n               </ErrorBoundary>\n               <ErrorBoundary>\n                  <CharInfo charId={selectedChar}/>\n               </ErrorBoundary>\n            </div>\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\n         </main>\n      </div>\n   )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}