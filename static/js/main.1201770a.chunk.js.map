{"version":3,"sources":["components/appHeader/AppHeader.js","services/MarvelService.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_offsetBase","_total","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","total","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","src","img","objectFit","alt","RandomChar","state","loading","error","marvelService","onCharLoaded","setState","onCharLoading","onError","updateChar","Math","floor","random","then","catch","this","spinner","errorMessage","content","onClick","componentDidMount","mjolnir","Component","View","CharList","chars","newCharactersLoading","charsEnded","refItems","loadingCharsByScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","onRequest","onLoadingCharacters","onLoadedCharacters","newChars","ended","true","setRef","ref","push","focusChar","i","focus","renderItems","item","tabIndex","props","onCharSelected","onKeyPress","e","key","addEventListener","removeEventListener","disabled","Skeleton","CharInfo","charId","prevProps","skeleton","length","ErrorBoundary","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1201770a.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n   return (\n      <header className=\"app__header\">\n         <h1 className=\"app__title\">\n               <a href=\"https://www.google.com/\">\n                  <span>Marvel</span> information portal\n               </a>\n         </h1>\n         <nav className=\"app__menu\">\n               <ul>\n                  <li><a href=\"https://www.google.com/\">Characters</a></li>\n                  /\n                  <li><a href=\"https://www.google.com/\">Comics</a></li>\n               </ul>\n         </nav>\n      </header>\n   )\n}\n\nexport default AppHeader;","class MarvelService {\n   _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n   _apiKey = 'apikey=7b278298a152832e44b30fbabfc1fdbd';\n   _offsetBase = 210;\n   _total = 0;\n\n   getResource = async (url) => {\n      const res = await fetch(url);\n\n      if (!res.ok) {\n         throw new Error(`Could not fetch ${url}, status: ${res.status}`);\n      }\n\n      return await res.json();\n   }\n\n   getAllCharacters = async (offset = this._offsetBase) => {\n      const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\n      this._total = res.data.total;\n      return res.data.results.map(this._transformCharacter);\n   }\n\n   getCharacter = async (id) => {\n      const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\n      return this._transformCharacter(res.data.results[0]);\n   }\n\n   _transformCharacter = (char) => {\n      return {\n         name: char.name,\n         id: char.id,\n         description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character. Read on the wiki.',\n         thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n         homepage: char.urls[0].url,\n         wiki: char.urls[1].url,\n         comics: char.comics.items,\n      }\n   }\n}\n\nexport default MarvelService;","const Spinner = () => {\n   return (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n         <g transform=\"translate(80,50)\">\n         <g transform=\"rotate(0)\">\n         <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#E81111\" fillOpacity=\"1\">\n         <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n         <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n         </circle>\n         </g>\n         </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n         <g transform=\"rotate(45)\">\n         <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#E81111\" fillOpacity=\"0.875\">\n         <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n         <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n         </circle>\n         </g>\n         </g><g transform=\"translate(50,80)\">\n         <g transform=\"rotate(90)\">\n         <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#E81111\" fillOpacity=\"0.75\">\n         <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n         <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n         </circle>\n         </g>\n         </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n         <g transform=\"rotate(135)\">\n         <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#E81111\" fillOpacity=\"0.625\">\n         <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n         <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n         </circle>\n         </g>\n         </g><g transform=\"translate(20,50.00000000000001)\">\n         <g transform=\"rotate(180)\">\n         <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#E81111\" fillOpacity=\"0.5\">\n         <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n         <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n         </circle>\n         </g>\n         </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n         <g transform=\"rotate(225)\">\n         <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#E81111\" fillOpacity=\"0.375\">\n         <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n         <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n         </circle>\n         </g>\n         </g><g transform=\"translate(49.99999999999999,20)\">\n         <g transform=\"rotate(270)\">\n         <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#E81111\" fillOpacity=\"0.25\">\n         <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n         <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n         </circle>\n         </g>\n         </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n         <g transform=\"rotate(315)\">\n         <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#E81111\" fillOpacity=\"0.125\">\n         <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n         <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n         </circle>\n         </g>\n         </g>\n      </svg>\n   )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\n\nconst ErrorMessage = () => {\n   return (\n      <img src={img} style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}} alt='Error'/>\n   )\n}\n\nexport default ErrorMessage;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from 'react';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nclass RandomChar extends Component {\n   state = {\n      char: {},\n      loading: true,\n      error: false,\n   }\n\n   marvelService = new MarvelService();\n\n   componentDidMount() {\n      this.updateChar();\n   }\n\n   onCharLoaded = (char) => {\n      this.setState({\n         char,\n         loading: false,\n         error: false,\n      });\n   }\n\n   onCharLoading = () => {\n      this.setState({\n         loading: true,\n      })\n   }\n\n   onError = () => {\n      this.setState({\n         loading: false,\n         error: true,\n      });\n   }\n\n   updateChar = () => {\n      const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n      this.onCharLoading();\n      this.marvelService.getCharacter(id)\n         .then(this.onCharLoaded)\n         .catch(this.onError);\n   }\n\n   render() {\n      const {char, loading, error} = this.state;\n      const spinner = loading ? <Spinner/> : null;\n      const errorMessage = error ? <ErrorMessage/> : null;\n      const content = !(spinner || errorMessage) ? <View char={char}/> : null;\n      return (\n         <section className=\"randomchar\">\n            {spinner}\n            {errorMessage}\n            {content}\n            <div className=\"randomchar__static\">\n               <p className=\"randomchar__title\">\n                  Random character for today!<br/>\n                  Do you want to get to know him better?\n               </p>\n               <p className=\"randomchar__title\">\n                  Or choose another one\n               </p>\n               <button className=\"button button__main\"\n                        onClick={() => this.componentDidMount()}>\n                  <div className=\"inner\">try it</div>\n               </button>\n               <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n         </section>\n      )\n   }\n}\n\nconst View = ({char}) => {\n   const {name, description, thumbnail, homepage, wiki} = char;\n\n   let objectFit = {objectFit: 'cover'};\n\n   if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n      objectFit = {objectFit: 'contain'};\n   }\n\n   return (\n      <div className=\"randomchar__block\">\n         <img src={thumbnail} style={objectFit} alt=\"Random character\" className='randomchar__img'/>\n         <div className=\"randomchar__info\">\n            <p className=\"randomchar__name\">{name}</p>\n            <p className=\"randomchar__descr\">\n               {description}\n            </p>\n            <div className=\"randomchar__btns\">\n               <a href={homepage} className=\"button button__main\">\n                     <div className=\"inner\">homepage</div>\n               </a>\n               <a href={wiki} className=\"button button__secondary\">\n                     <div className=\"inner\">Wiki</div>\n               </a>\n            </div>\n         </div>\n      </div>\n   )\n}\n\nexport default RandomChar;","import './charList.scss';\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nclass CharList extends Component {\n\n   state = {\n      chars: [],\n      error: false,\n      loading: true,\n      newCharactersLoading: false,\n      offset: 210,\n      charsEnded: false,\n   }\n\n   refItems = [];\n\n   marvelService = new MarvelService();\n\n   componentDidMount() {\n      this.onRequest();\n      window.addEventListener('scroll', this.loadingCharsByScroll);\n   }\n\n   componentWillUnmount() {\n      window.removeEventListener('scroll', this.loadingCharsByScroll);\n   }\n \n   loadingCharsByScroll = () => {\n      if ((window.scrollY + document.documentElement.clientHeight >= document.documentElement.scrollHeight) && (document.documentElement.scrollHeight >= 1614)) {\n         this.onRequest(this.state.offset);\n      }\n   }\n\n   onRequest = (offset) => {\n      this.onLoadingCharacters();\n      this.marvelService.getAllCharacters(offset)\n         .then(this.onLoadedCharacters)\n         .catch(this.onError);\n   }\n\n   onError = () => {\n      this.setState({\n         error: true,\n         loading: false,\n      })\n   }\n\n   onLoadingCharacters = () => {\n      this.setState({\n         newCharactersLoading: true,\n      })\n   }\n\n   onLoadedCharacters = newChars => {\n      let ended = this.marvelService._total - this.state.offset <= 9;\n\n      this.setState(({chars, offset}) => ({\n         chars: [...chars, ...newChars],\n         loading: false,\n         true: false,\n         newCharactersLoading: false,\n         offset: offset + 9,\n         charsEnded: ended,\n      }))\n   }\n\n   setRef = (ref) => {\n      this.refItems.push(ref);\n   }\n\n   focusChar = (i) => {\n      this.refItems[i].focus();\n   }\n\n   renderItems = (chars) => {\n      const items = chars.map((item, i) => {\n         const {thumbnail, name, id} = item;\n\n         let objectFit = {objectFit: 'cover'};\n\n         if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n            objectFit = {objectFit: 'contain'};\n         }\n         \n         return (\n            <li className='char__item'\n               tabIndex={0}\n               ref={this.setRef}\n               key={id}\n               onClick={() => {\n                  this.props.onCharSelected(id);\n                  this.focusChar(i);\n               }}\n               onKeyPress={(e) => {\n                  if (e.key === 'Enter') {\n                     this.props.onCharSelected(id);\n                     this.focusChar(i);\n                  }\n               }}>\n               <img style={objectFit} src={thumbnail} alt=\"abyss\"/>\n               <div className=\"char__name\">{name}</div>\n            </li>\n         )\n      })\n      \n      return (\n         <ul className=\"char__grid\">\n            {items}\n         </ul>\n      );\n   }\n\n   render() {\n      const {chars, loading, error, newCharactersLoading, offset, charsEnded} = this.state;\n\n      const items = this.renderItems(chars);\n\n      const errorMessage = error ? <ErrorMessage/> : null;\n      const spinner = loading ? <Spinner/> : null;\n      const content = !(spinner || errorMessage) ? items : null;\n      \n      return (\n         <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <button \n               className=\"button button__main button__long\"\n               disabled={newCharactersLoading}\n               onClick={() => this.onRequest(offset)}\n               style={{'display': charsEnded ? 'none' : 'block'}}>\n               <div className=\"inner\">load more</div>\n            </button>\n         </div>\n      )\n   }\n}\n\nCharList.propTypes = {\n   onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n   return (\n      <>\n         <p className=\"char__select\">Please select a character to see information</p>\n         <div className=\"skeleton\">\n            <div className=\"pulse skeleton__header\">\n               <div className=\"pulse skeleton__circle\"></div>\n               <div className=\"pulse skeleton__mini\"></div>\n            </div>\n            <div className=\"pulse skeleton__block\"></div>\n            <div className=\"pulse skeleton__block\"></div>\n            <div className=\"pulse skeleton__block\"></div>\n         </div>\n      </>\n   )\n}\n\nexport default Skeleton;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\nimport MarvelService from '../../services/MarvelService';\n\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n\n   state = {\n      char: null,\n      loading: false,\n      error: false,\n   }\n\n   marvelService = new MarvelService();\n\n   componentDidMount() {\n      this.updateChar();\n   }\n\n   componentDidUpdate(prevProps) {\n      if (this.props.charId !== prevProps.charId) {\n         this.updateChar();\n      }\n   }\n\n   updateChar = () => {\n      const {charId} = this.props;\n\n      if (!charId) {\n         return;\n      }\n\n      this.onCharLoading();\n      this.marvelService.getCharacter(charId)\n         .then(this.onCharLoaded)\n         .catch(this.onError);\n   }\n\n   onCharLoaded = (char) => {\n      this.setState({\n         char,\n         loading: false,\n         error: false,\n      });\n   }\n\n   onCharLoading = () => {\n      this.setState({\n         loading: true,\n      })\n   }\n\n   onError = () => {\n      this.setState({\n         loading: false,\n         error: true,\n      });\n   }\n\n   render() {\n      const {char, loading, error} = this.state;\n      \n      const skeleton = char || loading || error ? null : <Skeleton/>;\n      const spinner = loading ? <Spinner/> : null;\n      const errorMessage = error ? <ErrorMessage/> : null;\n      const content = !(spinner || errorMessage || !char) ? <View char={char}/> : null;\n      return (\n         <div className=\"char__info\">\n            {skeleton}\n            {spinner}\n            {errorMessage}\n            {content}\n         </div>\n      )\n   }\n}\n\nconst View = ({char}) => {\n   const {name, description, thumbnail, homepage, wiki, comics} = char;\n   let objectFit = {objectFit: 'cover'};\n   if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n      objectFit = {objectFit: 'contain'};\n   }\n\n   return (\n      <>\n         <div className=\"char__basics\">\n            <img src={thumbnail} style={objectFit} alt=\"abyss\"/>\n            <div>\n               <div className=\"char__info-name\">{name}</div>\n               <div className=\"char__btns\">\n                  <a href={homepage} className=\"button button__main\">\n                     <div className=\"inner\">homepage</div>\n                  </a>\n                  <a href={wiki} className=\"button button__secondary\">\n                     <div className=\"inner\">Wiki</div>\n                  </a>\n               </div>\n            </div>\n         </div>\n         <div className=\"char__descr\">\n            {description}\n         </div>\n         <div className=\"char__comics\">Comics:</div>\n         <ul className=\"char__comics-list\">\n            {comics.length > 0 ? null : 'There are no comics featuring this character.'}\n            {\n               comics.map((item, i) => {\n                  while (i < 10) {\n                     return (\n                        <li key={i} className=\"char__comics-item\">\n                           {item.name}\n                        </li>\n                     )\n                  }\n               })\n            }\n         </ul>\n      </>\n   )\n}\n\nCharInfo.propTypes = {\n   charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nclass ErrorBoundary extends Component {\n\n   state = {\n      error: false,\n   }\n\n   // static getDerivedStateFromError(error) {\n   //    return {error: true};\n   // }\n\n   componentDidCatch() {\n      this.setState({\n         error: true,\n      })\n   }\n\n   render() {\n      return (\n         this.state.error ? <ErrorMessage/> : this.props.children\n      )\n   }\n}\n\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n\n   state = {\n      selectedChar: null,\n   }\n   \n   onCharSelected = (id) => {\n      this.setState({\n         selectedChar: id,\n      })\n   }\n\n   render() {\n      return (\n         <div className=\"app\">\n            <AppHeader/>\n            <main className=\"content\">\n               <ErrorBoundary>\n                  <RandomChar/>\n               </ErrorBoundary>\n               <div className=\"char__content\">\n                  <ErrorBoundary>\n                     <CharList onCharSelected={this.onCharSelected}/>\n                  </ErrorBoundary>\n                  <ErrorBoundary>\n                     <CharInfo charId={this.state.selectedChar}/>\n                  </ErrorBoundary>\n               </div>\n               <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\n            </main>\n         </div>\n      )\n   }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}